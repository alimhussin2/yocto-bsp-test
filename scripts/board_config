#!/bin/bash

CONF_DIR="/srv/data/LAVA/config"
LAVA_DIR=$(ls / | grep lava)
LAVA_PROXY="/$LAVA_DIR/bin/lava-proxy"

source $LAVA_PROXY
echo "[  INFO  ] Set proxy"

echo "[  INFO  ] Install netifaces"
pip3 install netifaces

echo "[  INFO  ] Install buildbot-worker"
pip3 install buildbot-worker
git clone https://git.yoctoproject.org/git/yocto-autobuilder2
git clone https://git.yoctoproject.org/git/yocto-autobuilder-helper
buildbot-worker create-worker --umask=0o22 ~/yocto-worker $YOCTO_CONTROLLER `hostname` $BUILDBOT_PASS
buildbot-worker start ~/yocto-worker
if [[ $? -eq 0 ]]; then
    echo "[  OK  ] Buildbot-worker start successfully"
else
   echo "[  ERROR  ] Unable to start buildbot-worker"
fi

if [[ ! -d "/srv/data" ]]; then
    mkdir -p /srv/data
    echo "[  INFO  ] Creating a dirctory in /srv/data"
else
    echo "[  INFO  ] Directory /srv/data exists"
fi
echo "[  INFO  ] Mount to nfs server"
mount nfsserver:/srv/data /srv/data

echo "[  INFO  ] Set hostname"
sed -i "s/localhost.localdomain/`hostname`/g" /etc/hosts

if [[ $? -eq 0 ]]; then
    echo "[  OK  ] Successfully mount to nfs server"
    echo "[  INFO  ] Configure vncserver"
    mkdir ~/.vnc
    cp $CONF_DIR/vnc/vnc_config ~/.vnc/passwd;
    chmod 600 ~/.vnc/passwd
    vncserver :1; vncserver -kill :1
    rm ~/.vnc/xstartup
    cp $CONF_DIR/vnc/xstartup ~/.vnc/xstartup; chmod +x ~/.vnc/xstartup
    vncserver :1
    if [[ $? -eq 0 ]]; then
        echo "[  OK  ] Vnc start at :1"
    else 
        echo "[  ERROR  ] Unable to start vnc"
    fi
else
    echo "[  ERROR  ] Unable to mount to nfs server"
fi

